{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAkBA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBb,EAAAe,OAAOC,QAAQ,uBAAqBJ,QAAiBC,OACnDI,QAAMC,IAAI,C,SAAEN,E,MAAUC,GAAQ,IAEjCM,OAAM,EAACP,SAAEA,EAAQC,MAAEA,MAClBb,EAAAe,OAAOK,QAAQ,sBAAoBR,QAAeC,OAClDI,QAAQC,IAAI,C,SAAEN,E,MAAUC,GAAQ,G,CApCzBQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAYF,EAAEG,cAAcd,MAAMe,cACtC,MAAMC,EAAYL,EAAEG,cAAcG,KAAKF,cACjCG,EAAkBP,EAAEG,cAAcK,OAAOJ,cAE/C,IAAK,IAAIhB,EAAW,EAAGA,GAAYmB,EAAiBnB,GAAY,EAC9DV,EAAcU,EAAUc,GACxBA,GAAaG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  let delayCurr = e.currentTarget.delay.valueAsNumber;\n  const delayStep = e.currentTarget.step.valueAsNumber;\n  const amountOfPromise = e.currentTarget.amount.valueAsNumber;\n\n  for (let position = 1; position <= amountOfPromise; position += 1) {\n    createPromise(position, delayCurr);\n    delayCurr += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log({ position, delay });\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log({ position, delay });\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","Notify","success","console","log","catch","failure","document","querySelector","addEventListener","e","preventDefault","delayCurr","currentTarget","valueAsNumber","delayStep","step","amountOfPromise","amount"],"version":3,"file":"03-promises.74e2436b.js.map"}